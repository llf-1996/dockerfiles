version: "3.0"

services:
  service_client_builder:
    container_name: service_client_builder
    image: "node:18"
    volumes:
      - ".:/home/deployment/ClientProject"
    command: sh -c "cd /home/deployment/ClientProject && npm i && npm run build-only"

  service_redis:
    container_name: service_redis
    image: redis:6.0.6
    volumes:
      - ./datas/redis:/data/redis
      - ./confs/redis/redis.conf:/usr/local/etc/redis/redis.conf
      - ./logs/redis:/logs/redis
    command: redis-server /usr/local/etc/redis/redis.conf
    #   #  两个写入操作 只是为了解决启动后警告 可以去掉
    #    /bin/bash -c "echo 511 > /proc/sys/net/core/somaxconn
    #    && echo never > /sys/kernel/mm/transparent_hugepage/enabled
    #    && redis-server /usr/local/etc/redis/redis.conf"
    ports:
      # 使用宿主机的端口映射到容器的端口
      # 宿主机：容器
      - 16379:6379
    networks:
      service_net:
        ipv4_address: 172.19.0.20

  service_pg:
    container_name: service_pg
    # image: postgres:14
    # environment:
    #   POSTGRES_USER: llf
    #   POSTGRES_PASSWORD: Aa11111111
    #   POSTGRES_DB: postgres
    build:
      context: .
      dockerfile: ./Dockerfiles/service_pg/Dockerfile
    healthcheck:
      test: [ "CMD", "pg_isready", "-q", "-d", "postgres", "-U", "llf"]
      timeout: 45s
      interval: 10s
      retries: 10
    volumes:
      - ./datas/postgresql/pgdata:/var/lib/postgresql/data
      - ./confs/postgresql/init-user-db.sh:/docker-entrypoint-initdb.d/init-user-db.sh
      - ./confs/postgresql/public.sql:/docker-entrypoint-initdb.d/public.sql
    ports:
      - 15432:5432
    networks:
      service_net:
        ipv4_address: 172.19.0.30

  service_backend:
    container_name: service_backend
    build:
      context: .
      dockerfile: ./Dockerfiles/service_backend/Dockerfile
    environment:
      ENV_TYPE: "pro"  # 环境配置： dev or pro
    ports:
      - "80:80"
      - "443:443"
    volumes:
      # - .:/home/deploy/dockerfiles
      - "./logs/nginx:/var/log/nginx"
    depends_on:
      - service_redis
      - service_pg
    networks:
      service_net:
        ipv4_address: 172.19.0.10
    ulimits:
      nproc: 65535
      nofile:
        soft: 20000
        hard: 40000

networks:
  service_net:
    external: false  # Use a pre-existing network
    ipam:
      config:
        - subnet: 172.19.0.0/24
          gateway: 172.19.0.1
